{"ast":null,"code":"var _jsxFileName = \"/Users/codywesley/Documents/frontend-exam/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm_password, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  let users = JSON.parse(localStorage.getItem('users'));\n\n  function handleEmail(e) {\n    setEmail(e.target.value);\n    setError('');\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n    setError('');\n  }\n\n  function handleConfirmPassword(e) {\n    setConfirmPassword(e.target.value);\n    setError('');\n  }\n\n  function handleSubmit(e) {\n    if (email && password && confirm_password) {\n      password == confirm_password ? handleRegister() : setError(\"Password doesn't match\");\n    } else {\n      setError('All fields are required');\n    }\n  }\n\n  function handleRegister() {\n    const submitData = {\n      \"id\": users.length + 1,\n      \"email\": email,\n      \"password\": password,\n      \"role\": \"user\"\n    };\n    users = [...users, submitData];\n    localStorage.setItem('users', users);\n    setSuccess('Successfully Registered!'); // Clear all fields\n\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"l-form login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form-title\",\n      children: \"REGISTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-field\",\n          value: email,\n          onChange: e => handleEmail(e),\n          type: \"email\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-field\",\n          value: password,\n          onChange: e => handlePassword(e),\n          type: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-label\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-field\",\n          value: confirm_password,\n          onChange: e => handleConfirmPassword(e),\n          type: \"password\",\n          name: \"confirm_password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"REGISTER\",\n        onClick: e => handleSubmit(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"account\",\n        children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"account-link\",\n          to: \"/login\",\n          children: \" LOGIN HERE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"4t7TR13KIFJ+Lby3FVn0VGeZNOU=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/codywesley/Documents/frontend-exam/src/components/Register.js"],"names":["useState","Link","Button","Register","email","setEmail","password","setPassword","confirm_password","setConfirmPassword","error","setError","success","setSuccess","users","JSON","parse","localStorage","getItem","handleEmail","e","target","value","handlePassword","handleConfirmPassword","handleSubmit","handleRegister","submitData","length","setItem"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from './Button';\n\nconst Register = () => {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm_password, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  let users = JSON.parse(localStorage.getItem('users'));\n\n  function handleEmail(e) {\n    setEmail(e.target.value)\n    setError('');\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value)\n    setError('');\n  }\n\n  function handleConfirmPassword(e) {\n    setConfirmPassword(e.target.value)\n    setError('');\n  }\n\n  function handleSubmit(e) {\n    if(email && password && confirm_password) {\n      \n      password == confirm_password\n       ? handleRegister()\n       : setError(\"Password doesn't match\")\n    } else {\n      setError('All fields are required');\n    }\n  }\n\n  function handleRegister() {\n    const submitData = {\n      \"id\": users.length + 1,\n      \"email\": email,\n      \"password\": password,\n      \"role\": \"user\"\n    }\n\n    users = [...users, submitData];\n    localStorage.setItem('users', users);\n    setSuccess('Successfully Registered!')\n\n    // Clear all fields\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n  }\n  \n\n  return (\n    <section className=\"l-form login\">\n      <h1 className=\"form-title\">REGISTER</h1>\n      <form className=\"form\">\n        {\n          error &&\n          <p className=\"form-error\">{error}</p>\n        }\n        {\n          success &&\n          <p className=\"form-success\">{success}</p>\n        }\n        <div className=\"form-group\">\n          <p className=\"form-label\">Email</p>\n          <input className=\"form-field\" value={email} onChange={(e) => (handleEmail(e))} type=\"email\" name=\"email\" required/>\n        </div>\n        <div className=\"form-group\">\n          <p className=\"form-label\">Password</p>\n          <input className=\"form-field\" value={password} onChange={(e) => (handlePassword(e))} type=\"password\" name=\"password\" required/>\n        </div>\n        <div className=\"form-group\">\n          <p className=\"form-label\">Confirm Password</p>\n          <input className=\"form-field\" value={confirm_password} onChange={(e) => (handleConfirmPassword(e))} type=\"password\" name=\"confirm_password\" required/>\n        </div>\n        <Button title=\"REGISTER\" onClick={(e) => (handleSubmit(e))} />\n        <p className=\"account\">Already have an account?<Link className=\"account-link\" to=\"/login\"> LOGIN HERE</Link></p>\n      </form>\n    </section>\n  ) \n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}