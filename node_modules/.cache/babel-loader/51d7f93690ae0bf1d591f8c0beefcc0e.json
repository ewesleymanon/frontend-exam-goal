{"ast":null,"code":"var _jsxFileName = \"/Users/codywesley/Documents/frontend-exam/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logIn } from '../actions';\nimport { Link, useHistory } from 'react-router-dom';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let users = JSON.parse(localStorage.getItem('users'));\n\n  function handleEmail(e) {\n    setEmail(e.target.value);\n    setError('');\n    setSuccess('');\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n    setError('');\n    setSuccess('');\n  }\n\n  function handleSubmit(e) {\n    if (email && password) {\n      const check = users.find(user => user.email == email && user.password == password);\n\n      if (check) {\n        localStorage.setItem('session', JSON.stringify({\n          isLoggedIn: true,\n          role: check.role\n        }));\n        dispatch(logIn(check.role));\n        setSuccess('Successfully Logged In');\n        setTimeout(() => {\n          history.push('/');\n        }, 1000);\n      } else {\n        setError('Invalid Credentials');\n      }\n    } else {\n      setSuccess('');\n      setError('All fields are required');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"l-form login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form-title\",\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-status is-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-status is-success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-field\",\n          value: email,\n          onChange: e => handleEmail(e),\n          type: \"email\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-field\",\n          value: password,\n          onChange: e => handlePassword(e),\n          type: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"LOGIN\",\n        onClick: e => handleSubmit(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"account\",\n        children: [\"No account yet? \", /*#__PURE__*/_jsxDEV(Link, {\n          className: \"account-link\",\n          to: \"/register\",\n          children: \" REGISTER HERE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"YNXnlY1paIbqKx4Z2WmrGW7no9s=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/codywesley/Documents/frontend-exam/src/components/Login.js"],"names":["useState","useSelector","useDispatch","logIn","Link","useHistory","Button","Login","email","setEmail","password","setPassword","error","setError","success","setSuccess","history","dispatch","users","JSON","parse","localStorage","getItem","handleEmail","e","target","value","handlePassword","handleSubmit","check","find","user","setItem","stringify","isLoggedIn","role","setTimeout","push"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logIn } from '../actions';\nimport { Link, useHistory } from 'react-router-dom';\nimport Button from './Button';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let users = JSON.parse(localStorage.getItem('users'));\n\n  function handleEmail(e) {\n    setEmail(e.target.value)\n    setError('');\n    setSuccess('');\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value)\n    setError('');\n    setSuccess('');\n  }\n\n  function handleSubmit(e) {\n    if(email && password) {\n      const check = users.find(user => user.email == email && user.password == password);\n      if(check) {\n        localStorage.setItem('session', JSON.stringify({isLoggedIn: true, role: check.role}));\n        dispatch(logIn(check.role));\n        setSuccess('Successfully Logged In')\n        setTimeout(() => {\n          history.push('/');\n        }, 1000)\n      } else {\n        setError('Invalid Credentials');\n      }\n        \n      \n    } else {\n      setSuccess('')\n      setError('All fields are required');\n    }\n  }\n\n  return (\n    <section className=\"l-form login\">\n      <h1 className=\"form-title\">LOGIN</h1>\n      <form className=\"form\">\n        {\n          error &&\n          <p className=\"form-status is-error\">{error}</p>\n        }\n        {\n          success &&\n          <p className=\"form-status is-success\">{success}</p>\n        }\n        <div className=\"form-group\">\n          <p className=\"form-label\">Email</p>\n          <input className=\"form-field\" value={email} onChange={(e) => (handleEmail(e))} type=\"email\" name=\"email\" required/>\n        </div>\n        <div className=\"form-group\">\n          <p className=\"form-label\">Password</p>\n          <input className=\"form-field\" value={password} onChange={(e) => (handlePassword(e))} type=\"password\" name=\"password\" required/>\n        </div>\n        <Button title=\"LOGIN\" onClick={(e) => (handleSubmit(e))} />\n        <p className=\"account\">No account yet? <Link className=\"account-link\" to=\"/register\"> REGISTER HERE</Link></p>\n      </form>\n    </section>\n  ) \n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}