{"ast":null,"code":"var _jsxFileName = \"/Users/codywesley/Documents/frontend-exam/src/components/Slider.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst fs = require('fs');\n\nconst slideImage = require('../assets/images/hero.png').default;\n\nconst arrowLeft = require('../assets/images/arrow-left.svg').default;\n\nconst arrowRight = require('../assets/images/arrow-right.svg').default;\n\nfs.readFile('../json/slides.json', (err, data) => {\n  if (err) throw err;\n  let student = JSON.parse(data);\n  console.log(student);\n});\n\nconst Slider = () => {\n  _s();\n\n  let [show, setShow] = useState(false);\n  let [direction, setDirection] = useState(1);\n  let [current, setCurrent] = useState(0);\n  let [transitionName, setTransitionName] = useState('fade');\n  const [slides, setSlides] = useState([{\n    id: 0,\n    img: slideImage,\n    title: '<span>サンプルテキスト</span><br/><span>サンプル ルテキスト</span><br/><span>サンプルテキスト</span>',\n    date: '2019.06.19'\n  }, {\n    id: 1,\n    img: slideImage,\n    title: '<span>サンプルテキスト</span><br/><span>サンプル ルテキスト</span><br/><span>サンプルテキスト</span>',\n    date: '2019.07.20'\n  }, {\n    id: 2,\n    img: slideImage,\n    title: '<span>サンプルテキスト</span><br/><span>サンプル ルテキスト</span><br/><span>サンプルテキスト</span>',\n    date: '2019.08.21'\n  }]);\n\n  function handleJump(index) {\n    current < index ? setTransitionName('slide-next-enter') : setTransitionName('slide-prev-enter');\n    setCurrent(index);\n  }\n\n  function handleSlide(dir) {\n    setDirection(dir);\n    dir === 1 ? setTransitionName('slide-next-enter') : setTransitionName('slide-prev-enter');\n    const len = slides.length;\n    setCurrent((current + dir % len + len) % len);\n  }\n\n  const SlideItem = ({\n    id,\n    img,\n    title,\n    date\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: 'slider-item ' + (id === current ? 'is-active' : ''),\n      style: {\n        backgroundImage: `url(${img})`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"slide-heading\",\n          dangerouslySetInnerHTML: {\n            __html: title\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"slide-date\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    setShow(true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"slider\",\n    children: show === true && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"slider-container\",\n        children: slides.map(item => /*#__PURE__*/_jsxDEV(SlideItem, {\n          id: item.id,\n          img: item.img,\n          title: item.title,\n          date: item.date\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"slide-prev\",\n          src: arrowLeft,\n          onClick: () => handleSlide(-1),\n          alt: \"Arrow Left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"slide-next\",\n          src: arrowRight,\n          onClick: () => handleSlide(1),\n          alt: \"Arrow Right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"slide-indicators\",\n        children: slides.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: item.id === current ? 'active' : '',\n          onClick: () => handleJump(item.id)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"//lUmZc058qQb+jBgPEEPjI9pw4=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["/Users/codywesley/Documents/frontend-exam/src/components/Slider.js"],"names":["useState","useEffect","fs","require","slideImage","default","arrowLeft","arrowRight","readFile","err","data","student","JSON","parse","console","log","Slider","show","setShow","direction","setDirection","current","setCurrent","transitionName","setTransitionName","slides","setSlides","id","img","title","date","handleJump","index","handleSlide","dir","len","length","SlideItem","backgroundImage","__html","map","item"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nconst fs = require('fs');\n\nconst slideImage = require('../assets/images/hero.png').default;\nconst arrowLeft = require('../assets/images/arrow-left.svg').default;\nconst arrowRight = require('../assets/images/arrow-right.svg').default;\n\nfs.readFile('../json/slides.json', (err, data) => {\n  if (err) throw err;\n  let student = JSON.parse(data);\n  console.log(student);\n});\n\nconst Slider = () => {\n  let [show, setShow] = useState(false);\n  let [direction, setDirection] = useState(1);\n  let [current, setCurrent] = useState(0);\n  let [transitionName, setTransitionName] = useState('fade');\n\n  const [slides, setSlides] = useState([\n    {\n      id: 0,\n      img: slideImage,\n      title: '<span>サンプルテキスト</span><br/><span>サンプル ルテキスト</span><br/><span>サンプルテキスト</span>',\n      date: '2019.06.19'\n    },\n    {\n      id: 1,\n      img: slideImage,\n      title: '<span>サンプルテキスト</span><br/><span>サンプル ルテキスト</span><br/><span>サンプルテキスト</span>',\n      date: '2019.07.20'\n    },\n    {\n      id: 2,\n      img: slideImage,\n      title: '<span>サンプルテキスト</span><br/><span>サンプル ルテキスト</span><br/><span>サンプルテキスト</span>',\n      date: '2019.08.21'\n    }\n  ]);\n\n  function handleJump(index) {\n    current < index\n      ? setTransitionName('slide-next-enter')\n      : setTransitionName('slide-prev-enter');\n    setCurrent(index);\n  }\n\n  function handleSlide(dir) {\n    setDirection(dir);\n\n    dir === 1\n      ? setTransitionName('slide-next-enter')\n      : setTransitionName('slide-prev-enter');\n    const len = slides.length;\n    setCurrent((current + (dir % len) + len) % len);\n  }\n\n  const SlideItem = ({id, img, title, date}) => {\n    return (\n      <li className={'slider-item ' + (id === current ? 'is-active' : '')} style={{backgroundImage: `url(${img})`}}>\n        <div className=\"slide-content\">\n          <h1 className=\"slide-heading\" dangerouslySetInnerHTML={{__html: title}}/>\n          <p className=\"slide-date\">{ date }</p>\n        </div>\n      </li>\n    )\n  }\n\n  useEffect(() => {\n    setShow(true);\n  });\n\n  return (\n    <section className=\"slider\">\n      {\n        show === true &&\n        <>\n          <ul className=\"slider-container\">\n            {\n              slides.map(item => (\n                <SlideItem\n                  key={item.id}\n                  id={item.id}\n                  img={item.img}\n                  title={item.title}\n                  date={item.date}\n                />\n              ))\n            }\n          </ul>\n          \n          <div className=\"slider-nav\">\n            <img \n            className=\"slide-prev\"\n            src={arrowLeft}\n            onClick={() => handleSlide(-1)}\n            alt=\"Arrow Left\"\n            />\n\n            <img \n            className=\"slide-next\"\n            src={arrowRight}\n            onClick={() => handleSlide(1)}\n            alt=\"Arrow Right\"\n            />\n          </div>\n          <ul className=\"slide-indicators\">\n            {\n              slides.map(item => (\n                <li\n                  key={item.id}\n                  className={(item.id === current) ? 'active' : ''}\n                  onClick={() => handleJump(item.id)}\n                />\n              ))\n            }\n          </ul>\n        </>\n      }\n    </section>\n  )\n}\n\nexport default Slider;"]},"metadata":{},"sourceType":"module"}